// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Checklist {
  id          String  @id @default(uuid())
  slug        String  @unique
  title       String
  description String?
  userId      String  @map("user_id")

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  items Item[]

  @@index([userId], name: "checklists_user_id_index")
  @@map("checklists")
}

model Item {
  id    String @id @default(uuid())
  order Int
  text  String

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  checklist   Checklist @relation(fields: [checklistId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  checklistId String    @map("checklist_id")

  subItems SubItem[]

  @@unique([checklistId, order], name: "items_checklist_id_order_key")
  @@map("items")
}

model SubItem {
  id    String @id @default(uuid())
  order Int
  text  String

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  item   Item   @relation(fields: [itemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  itemId String @map("item_id")

  @@unique([itemId, order], name: "subitems_item_id_order_key")
  @@map("subitems")
}
